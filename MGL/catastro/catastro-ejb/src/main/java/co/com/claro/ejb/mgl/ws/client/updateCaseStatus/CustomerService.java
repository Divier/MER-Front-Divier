package co.com.claro.ejb.mgl.ws.client.updateCaseStatus;

import co.com.claro.mgl.businessmanager.address.ParametrosMglManager;
import co.com.claro.mgl.error.ApplicationException;
import co.com.claro.mgl.jpa.entities.ParametrosMgl;
import co.com.telmex.catastro.services.ws.initialize.Initialized;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * OSB Service
 *
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.6-1b01 Generated
 * source version: 2.2
 *
 */
@WebServiceClient(name = "CustomerService", targetNamespace = "http://www.ericsson.com/esb/customer/v1.0", wsdlLocation = "http://localhost:7009/Customer/v1.0?wsdl")
public class CustomerService
        extends Service {

    private static final Logger LOGGER = LogManager.getLogger(CustomerService.class);
    private final static URL CUSTOMERSERVICE_WSDL_LOCATION;
    private final static WebServiceException CUSTOMERSERVICE_EXCEPTION;
    private final static QName CUSTOMERSERVICE_QNAME = new QName("http://www.ericsson.com/esb/customer/v1.0", "CustomerService");
    private final static String BASE_URL = "UPDATE_CHANGE_STRATUM_STATUS_SOAP";

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            ParametrosMglManager parametrosMglManager = new ParametrosMglManager();
            ParametrosMgl parametrosMgl = null;
            String urlBase = null;
            try {
                Initialized.getInstance();
                parametrosMgl = parametrosMglManager.findParametroMgl(BASE_URL);

                if (parametrosMgl != null && parametrosMgl.getParValor() != null
                        && !parametrosMgl.getParValor().isEmpty()) {
                    urlBase = parametrosMgl.getParValor();
                } else {
                    String msn = " No se  encontró la dirección del WS de Customer, operacion  updateCaseStatus en la tabla parametros";
                    LOGGER.error(msn);
                    throw new ApplicationException(msn);
                }
            } catch (ApplicationException ex) {
                LOGGER.error("Error en consultar parametro de CustomerBindingTypeQSService: " + ex);
            }
            url = new URL(urlBase);
        } catch (MalformedURLException ex) {
            LOGGER.error("Error en consultar parametro de CustomerBindingTypeQSService: " + ex);
            e = new WebServiceException(ex);
        }
        CUSTOMERSERVICE_WSDL_LOCATION = url;
        CUSTOMERSERVICE_EXCEPTION = e;
    }

    public CustomerService() {
        super(__getWsdlLocation(), CUSTOMERSERVICE_QNAME);
    }

    public CustomerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CUSTOMERSERVICE_QNAME);
    }

    public CustomerService(URL wsdlLocation) {
        super(wsdlLocation, CUSTOMERSERVICE_QNAME);
    }

    public CustomerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CUSTOMERSERVICE_QNAME);
    }

    public CustomerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CustomerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName);
    }

    /**
     *
     * @return returns CustomerPortType
     */
    @WebEndpoint(name = "CustomerPortType")
    public CustomerPortType getCustomerPortType() {
        return super.getPort(new QName("http://www.ericsson.com/esb/customer/v1.0", "CustomerPortType"), CustomerPortType.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in *
     * the <code>features</code> parameter will have their default values.
     * @return returns CustomerPortType
     */
    @WebEndpoint(name = "CustomerPortType")
    public CustomerPortType getCustomerPortType(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.ericsson.com/esb/customer/v1.0", "CustomerPortType"), CustomerPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CUSTOMERSERVICE_EXCEPTION != null) {
            throw CUSTOMERSERVICE_EXCEPTION;
        }
        return CUSTOMERSERVICE_WSDL_LOCATION;
    }
}
